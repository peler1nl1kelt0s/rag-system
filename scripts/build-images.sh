#!/bin/bash

# Docker Image Build Script for Ubuntu RAG System
# Bu script backend ve frontend Docker image'larÄ±nÄ± build eder

set -e

# Renkli output iÃ§in
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Log fonksiyonu
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] WARNING: $1${NC}"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR: $1${NC}"
    exit 1
}

# .env dosyasÄ±nÄ± yÃ¼kle
if [ -f ".env" ]; then
    source .env
    log ".env dosyasÄ± yÃ¼klendi"
else
    error ".env dosyasÄ± bulunamadÄ±. LÃ¼tfen .env.example'dan kopyalayÄ±n"
fi

# GitHub Container Registry'ye login kontrolÃ¼
log "GitHub Container Registry login kontrol ediliyor..."
if ! docker info | grep -q "Username: $GITHUB_USER"; then
    if [ -z "$GITHUB_TOKEN" ] || [ "$GITHUB_TOKEN" = "your_github_token_here" ]; then
        error "GITHUB_TOKEN .env dosyasÄ±nda tanÄ±mlanmamÄ±ÅŸ. LÃ¼tfen .env dosyasÄ±nÄ± dÃ¼zenleyin."
    fi
    log "GitHub Container Registry'ye login yapÄ±lÄ±yor..."
    echo "$GITHUB_TOKEN" | docker login ghcr.io -u "$GITHUB_USER" --password-stdin
    if [ $? -ne 0 ]; then
        error "GitHub Container Registry login baÅŸarÄ±sÄ±z!"
    fi
    log "âœ… GitHub Container Registry login baÅŸarÄ±lÄ±!"
fi

# Backend image build
log "Backend Docker image build ediliyor..."
cd apps/backend
docker build -t $IMAGE_REGISTRY/$IMAGE_REPOSITORY/rag-system-backend:$BACKEND_IMAGE_TAG .
log "âœ… Backend image build edildi: $IMAGE_REGISTRY/$IMAGE_REPOSITORY/rag-system-backend:$BACKEND_IMAGE_TAG"

# Frontend image build
log "Frontend Docker image build ediliyor..."
cd ../frontend
docker build -t $IMAGE_REGISTRY/$IMAGE_REPOSITORY/rag-system-frontend:$FRONTEND_IMAGE_TAG .
log "âœ… Frontend image build edildi: $IMAGE_REGISTRY/$IMAGE_REPOSITORY/rag-system-frontend:$FRONTEND_IMAGE_TAG"

cd ../..

# Image'larÄ± push et
log "Image'lar GitHub Container Registry'ye push ediliyor..."
docker push $IMAGE_REGISTRY/$IMAGE_REPOSITORY/rag-system-backend:$BACKEND_IMAGE_TAG
docker push $IMAGE_REGISTRY/$IMAGE_REPOSITORY/rag-system-frontend:$FRONTEND_IMAGE_TAG

log "ðŸŽ‰ TÃ¼m image'lar baÅŸarÄ±yla build edildi ve push edildi!"
log ""
log "ðŸ“‹ Build edilen image'lar:"
log "  Backend:  $IMAGE_REGISTRY/$IMAGE_REPOSITORY/rag-system-backend:$BACKEND_IMAGE_TAG"
log "  Frontend: $IMAGE_REGISTRY/$IMAGE_REPOSITORY/rag-system-frontend:$FRONTEND_IMAGE_TAG"
log ""
log "ðŸ’¡ Åžimdi 'make up' komutunu Ã§alÄ±ÅŸtÄ±rabilirsiniz"
